/*------------------------------------*\
    Mixins
\*------------------------------------*/

// Retina
@mixin retina {
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx), (min-resolution: 192dpi) {
    @content;
  }
}

// https://gist.github.com/timknight/03e6335b8816aa534cf7
// Breakpoint helper
@mixin bp($min: 0, $max: 0) {
  $type: type-of($min);

  @if $type == string {

    @if $min == bp-xl {
        @media (min-width: $bp-xl) { @content; }
    }
    @else if $min == bp-lg {
        @media (min-width: $bp-lg) { @content; }
    }
    @else if $min == bp-md {
        @media (min-width: $bp-md)  { @content; }
    }
    @else if $min == bp-sm {
        @media (min-width: $bp-sm)  { @content; }
    }

    // Otherwise pass a warning to the compiler as to the appropriate options
    @else {
      @warn "The breakpoint mixin supports the following attributes: bp-sm, bp-md, bp-lg, bp-xl";
    }
  }
  @else if $type == number {
    // Allow for custom parameters for min and max size
    $query: "all" !default;
    @if      $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; } // set both min and max
    @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; } // set just min
    @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; } // set just max
    @media #{$query} { @content; }
  }
}

/* Mixin */
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}